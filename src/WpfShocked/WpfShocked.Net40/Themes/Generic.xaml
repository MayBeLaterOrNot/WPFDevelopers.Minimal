<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:wpfs="clr-namespace:WpfShocked.Helpers">
	<Color x:Key="PrimaryTextColor">#303133</Color>
	<Color x:Key="RegularTextColor">#606266</Color>
	<Color x:Key="SecondaryTextColor">#909399</Color>
	<Color x:Key="PlaceholderTextColor">#C0C4CC</Color>
	<Color x:Key="DefaultBorderBrushColor">#FFC6E2FF</Color>
	<Color x:Key="DefaultBackgroundColor">#FFEBF4FF</Color>
	<Color x:Key="DefaultBackgroundPressedColor">#FF398DE6</Color>
	<Color x:Key="PrimaryNormalColor">#409EFF</Color>
	<Color x:Key="PrimaryMouseOverColor">#66B1FF</Color>
	<Color x:Key="PrimaryPressedColor">#3A8EE6</Color>
	<Color x:Key="SuccessColor">#67C23A</Color>
	<Color x:Key="SuccessMouseOverColor">#85CE61</Color>
	<Color x:Key="SuccessPressedColor">#5DAF34</Color>
	<Color x:Key="WarningColor">#E6A23C</Color>
	<Color x:Key="WarningMouseOverColor">#EBB563</Color>
	<Color x:Key="WarningPressedColor">#CF9236</Color>
	<Color x:Key="DangerColor">#F56C6C</Color>
	<Color x:Key="DangerMouseOverColor">#F78989</Color>
	<Color x:Key="DangerPressedColor">#DD6161</Color>
	<Color x:Key="InfoColor">#909399</Color>
	<Color x:Key="InfoMouseOverColor">#A6A9AD</Color>
	<Color x:Key="InfoPressedColor">#82848A</Color>
	<Color x:Key="WhiteColor">#FFFFFF</Color>
	<Color x:Key="ExtralightColor">#F2F6FC</Color>
	<Color x:Key="LighterColor">#EBEEF5</Color>
	<Color x:Key="LightColor">#E4E7ED</Color>
	<Color x:Key="BaseColor">#DCDFE6</Color>
	<Color x:Key="BlackColor">#000000</Color>
	<Color x:Key="CircularSingularColor">#BAE766</Color>
	<Color x:Key="CircularDualColor">#B0D440</Color>
	<sys:Double x:Key="NormalFontSize">14</sys:Double>
	<sys:Double x:Key="MediumFontSize">15</sys:Double>
	<sys:Double x:Key="TitleFontSize">18</sys:Double>
	<FontFamily x:Key="NormalFontFamily">
        Helvetica Neue For Number, 
        -apple-system, 
        BlinkMacSystemFont, 
        Segoe UI,
        Roboto, 
        PingFang SC, 
        Hiragino Sans GB, 
        Microsoft YaHei, 
        Helvetica Neue, 
        Helvetica, Arial, 
        sans-serif
    </FontFamily>
	<FontStretch x:Key="NormalFontStretch">Normal</FontStretch>
	<FontStyle x:Key="NormalFontStyle">Normal</FontStyle>
	<FontWeight x:Key="NormalFontWeight">Normal</FontWeight>
	<Geometry x:Key="PathCheckMark" po:Freeze="True">M384 690l452-452 60 60-512 512-238-238 60-60z</Geometry>
	<Geometry x:Key="PathMetroWindowMaximize" po:Freeze="True">M0.99999994,0.99999994 L0.99999994,9 9,9 9,0.99999994 z M0,0 L10,0 10,10 0,10 z</Geometry>
	<Geometry x:Key="PathMetroWindowRestore" po:Freeze="True">M1,3 L1,9 7,9 7,3 z M3,0.99999994 L3,2 8,2 8,7 9,7 9,0.99999994 z M2,0 L10,0 10,8 8,8 8,10 0,10 0,2 2,2 z</Geometry>
	<Geometry x:Key="PathMetroWindowClose" po:Freeze="True">M 1301 69.6875 L 1305.3049 74 L 1300.9375 78.5313 L 1301.6324 79.2263 L 1306 74.735 L 1310.4263 79.2613 L 1311.1563 78.5313 L 1306.7 74 L 1310.9375 69.6875 L 1310.2075 68.9575 L 1306 73.265 L 1301.6949 68.9925 L 1301 69.6875 Z</Geometry>
	<CubicEase x:Key="CubicEaseInOut" EasingMode="EaseInOut" />
	<PowerEase x:Key="PowerEaseInOut" EasingMode="EaseInOut" />
	<ExponentialEase x:Key="ExponentialEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="SineEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="SineEaseInOut" EasingMode="EaseInOut" />
	<sys:Double x:Key="EnabledOpacity">0.5</sys:Double>
	<sys:Double x:Key="NormalCornerRadius">4</sys:Double>
	<DropShadowEffect x:Key="NormalShadowDepth" BlurRadius="5" ShadowDepth="1" Direction="270" Color="#AA000000" Opacity=".42" RenderingBias="Performance" />
	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
						<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<sys:Double x:Key="ThumbWidth">16</sys:Double>
	<sys:Double x:Key="ThumbCornerRadius">8</sys:Double>
	<sys:Double x:Key="RepeatButtonSize">5</sys:Double>
	<SolidColorBrush x:Key="PrimaryTextSolidColorBrush" Color="{StaticResource PrimaryTextColor}" />
	<SolidColorBrush x:Key="RegularTextSolidColorBrush" Color="{StaticResource RegularTextColor}" />
	<SolidColorBrush x:Key="SecondaryTextSolidColorBrush" Color="{StaticResource SecondaryTextColor}" />
	<SolidColorBrush x:Key="PlaceholderTextSolidColorBrush" Color="{StaticResource PlaceholderTextColor}" />
	<SolidColorBrush x:Key="DefaultBorderBrushSolidColorBrush" Color="{StaticResource DefaultBorderBrushColor}" />
	<SolidColorBrush x:Key="DefaultBackgroundSolidColorBrush" Color="{StaticResource DefaultBackgroundColor}" />
	<SolidColorBrush x:Key="DefaultBackgroundPressedSolidColorBrush" Color="{StaticResource DefaultBackgroundPressedColor}" />
	<SolidColorBrush x:Key="PrimaryNormalSolidColorBrush" Color="{StaticResource PrimaryNormalColor}" />
	<SolidColorBrush x:Key="PrimaryMouseOverSolidColorBrush" Color="{StaticResource PrimaryMouseOverColor}" />
	<SolidColorBrush x:Key="PrimaryPressedSolidColorBrush" Color="{StaticResource PrimaryPressedColor}" />
	<SolidColorBrush x:Key="SuccessSolidColorBrush" Color="{StaticResource SuccessColor}" />
	<SolidColorBrush x:Key="SuccessMouseOverSolidColorBrush" Color="{StaticResource SuccessMouseOverColor}" />
	<SolidColorBrush x:Key="SuccessPressedSolidColorBrush" Color="{StaticResource SuccessPressedColor}" />
	<SolidColorBrush x:Key="WarningSolidColorBrush" Color="{StaticResource WarningColor}" />
	<SolidColorBrush x:Key="WarningMouseOverSolidColorBrush" Color="{StaticResource WarningMouseOverColor}" />
	<SolidColorBrush x:Key="WarningPressedSolidColorBrush" Color="{StaticResource WarningPressedColor}" />
	<SolidColorBrush x:Key="DangerSolidColorBrush" Color="{StaticResource DangerColor}" />
	<SolidColorBrush x:Key="DangerMouseOverSolidColorBrush" Color="{StaticResource DangerMouseOverColor}" />
	<SolidColorBrush x:Key="DangerPressedSolidColorBrush" Color="{StaticResource DangerPressedColor}" />
	<SolidColorBrush x:Key="InfoSolidColorBrush" Color="{StaticResource InfoColor}" />
	<SolidColorBrush x:Key="InfoMouseOverSolidColorBrush" Color="{StaticResource InfoMouseOverColor}" />
	<SolidColorBrush x:Key="InfoPressedSolidColorBrush" Color="{StaticResource InfoPressedColor}" />
	<SolidColorBrush x:Key="WhiteSolidColorBrush" Color="{StaticResource WhiteColor}" />
	<SolidColorBrush x:Key="ExtralightSolidColorBrush" Color="{StaticResource ExtralightColor}" />
	<SolidColorBrush x:Key="LighterSolidColorBrush" Color="{StaticResource LighterColor}" />
	<SolidColorBrush x:Key="LightSolidColorBrush" Color="{StaticResource LightColor}" />
	<SolidColorBrush x:Key="BaseSolidColorBrush" Color="{StaticResource BaseColor}" />
	<SolidColorBrush x:Key="BlackSolidColorBrush" Color="{StaticResource BlackColor}" />
	<SolidColorBrush x:Key="CircularSingularSolidColorBrush" Color="{StaticResource CircularSingularColor}" />
	<SolidColorBrush x:Key="CircularDualSolidColorBrush" Color="{StaticResource CircularDualColor}" />
	<Style x:Key="ControlBasicStyle" TargetType="Control">
		<Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="TextElement.FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="TextElement.FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="TextElement.FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="TextElement.FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="TextElement.FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="TextBlock.FontSize" Value="{DynamicResource NormalFontSize}" />
		<Setter Property="TextBlock.FontFamily" Value="{DynamicResource NormalFontFamily}" />
		<Setter Property="TextBlock.FontStyle" Value="{DynamicResource NormalFontStyle}" />
		<Setter Property="TextBlock.FontWeight" Value="{DynamicResource NormalFontWeight}" />
		<Setter Property="TextBlock.FontStretch" Value="{DynamicResource NormalFontStretch}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
	</Style>
	<Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="wpfs:ElementHelper.CornerRadius" Value="3" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="20,10" />
		<Setter Property="Cursor" Value="Hand" />
	</Style>
	<Style x:Key="PrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Foreground" Value="{DynamicResource WhiteSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Name="PART_Border" CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{DynamicResource PrimaryNormalSolidColorBrush}" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="00:00:0.3" From="Normal" To="MouseOver" />
									<VisualTransition GeneratedDuration="00:00:0.3" From="Pressed" />
									<VisualTransition GeneratedDuration="00:00:0.3" From="MouseOver" />
									<VisualTransition GeneratedDuration="00:00:0.3" To="Normal" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{DynamicResource PrimaryMouseOverColor}" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{DynamicResource PrimaryPressedColor}" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Background" Value="{DynamicResource WhiteSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" From="Normal" To="MouseOver" />
									<VisualTransition GeneratedDuration="0:0:0.1" From="Pressed" />
									<VisualTransition GeneratedDuration="0:0:0.1" From="MouseOver" />
									<VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBorderBrushColor}" />
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundColor}" />
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource PrimaryNormalColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundPressedColor}" />
										<ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundColor}" />
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" EasingFunction="{StaticResource ExponentialEaseOut}" To="{DynamicResource DefaultBackgroundPressedColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border" CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
						<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{DynamicResource RegularTextSolidColorBrush}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource DefaultBorderBrushSolidColorBrush}" />
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}" />
	<Style x:Key="PathButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="Transparent">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentPresenter" Opacity=".8" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Background" Value="{DynamicResource WhiteSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Border CornerRadius="{Binding ElementName=PART_Border,Path=CornerRadius}" Background="{Binding ElementName=PART_Border,Path=Background}" Margin="1,1,2,1">
							<Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Border.BorderBrush>
									<SolidColorBrush Color="{DynamicResource BaseColor}" />
								</Border.BorderBrush>
								<Grid Width="16" Height="16">
									<Ellipse x:Name="PART_Ellipse" Fill="{DynamicResource WhiteSolidColorBrush}" MinWidth="6" MinHeight="6" RenderTransformOrigin=".5,.5">
										<Ellipse.RenderTransform>
											<ScaleTransform ScaleX="0" ScaleY="0" />
										</Ellipse.RenderTransform>
									</Ellipse>
								</Grid>
							</Border>
						</Border>
						<ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryTextSolidColorBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{DynamicResource PrimaryPressedColor}" Duration="00:00:.1" />
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{DynamicResource PrimaryPressedColor}" Duration="00:00:.1" />
										<ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{DynamicResource PrimaryPressedColor}" Duration="00:00:.1" />
										<!--<ThicknessAnimation Storyboard.TargetName="PART_Border"
                                                         Storyboard.TargetProperty="BorderThickness" 
                                                         To="0,0,0,0" Duration="00:00:.1"/>-->
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleX)" To=".4" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
										<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleY)" To=".4" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboard">
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource PrimaryPressedColor}" Duration="00:00:.1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="PART_BeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollBar}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.2">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="2" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="12">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="12" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="14" />
		<Setter Property="MinWidth" Value="8.0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid Background="Transparent" x:Name="Bg" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Margin="0,0,1,0" IsDirectionReversed="True" Width="2" HorizontalAlignment="Right" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="14" />
				<Setter Property="MinHeight" Value="8.0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.2">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="2" />
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="12">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="12" />
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Margin="0,0,0,1" IsEnabled="{TemplateBinding IsMouseOver}" Height="2" VerticalAlignment="Bottom" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ScrollBarHideStyle" TargetType="{x:Type ScrollBar}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="2" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="12">
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>-->
				<DoubleAnimation Storyboard.TargetName="PART_Track" Duration="00:00:0.1" Storyboard.TargetProperty="Width" To="12" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="14" />
		<Setter Property="MinWidth" Value="8.0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid Background="Transparent" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Margin="0,0,1,0" IsDirectionReversed="True" Width="2" HorizontalAlignment="Right" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="14" />
				<Setter Property="MinHeight" Value="8.0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height">
										<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2" />
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>-->
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height">
										<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="12" />
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Margin="0,0,0,1" IsEnabled="{TemplateBinding IsMouseOver}" Height="2" VerticalAlignment="Bottom" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontal" TargetType="{x:Type Thumb}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="ThumbMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:0.1" />
			</Storyboard>
			<Storyboard x:Key="ThumbMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.2" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.2" Duration="00:00:0.1" />
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5">
				<Border.RenderTransform>
					<ScaleTransform />
				</Border.RenderTransform>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource ThumbMouseOut}" />
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource ThumbMouseOver}" />
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="-1,0,0,0" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="2">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
				<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
				<Border x:Name="TrackBackground" Height="6.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
					<Canvas Margin="-6,-1">
						<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Row="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}" Background="{DynamicResource PrimaryPressedSolidColorBrush}" Height="{StaticResource RepeatButtonSize}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource LightSolidColorBrush}" Height="{StaticResource RepeatButtonSize}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontal}" VerticalAlignment="Center" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontal}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontal}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="true">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
				<Setter Property="Foreground" TargetName="Thumb" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="0,0,0,-1" Name="PART_Border" RenderTransformOrigin=".5,.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="RenderTransform" TargetName="PART_Border">
					<Setter.Value>
						<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVertical" TargetType="{x:Type Thumb}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="ThumbMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:0.1" />
			</Storyboard>
			<Storyboard x:Key="ThumbMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.2" Duration="00:00:0.1" />
				<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.2" Duration="00:00:0.1" />
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
			<Border BorderBrush="{DynamicResource PrimaryPressedSolidColorBrush}" BorderThickness="2" Background="{DynamicResource WhiteSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Height="{StaticResource ThumbWidth}" Width="{StaticResource ThumbWidth}" CornerRadius="8" Margin="0,0,0,-1" Name="PART_Border" RenderTransformOrigin=".5,.5">
				<Border.RenderTransform>
					<ScaleTransform />
				</Border.RenderTransform>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource ThumbMouseOut}" />
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource ThumbMouseOver}" />
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="2">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4" />
				<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4" />
				<Border x:Name="TrackBackground" HorizontalAlignment="center" Margin="0,5" Width="6.0">
					<Canvas Margin="-1,-6">
						<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Column="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource PrimaryPressedSolidColorBrush}" Width="{StaticResource RepeatButtonSize}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="{DynamicResource LightSolidColorBrush}" Width="{StaticResource RepeatButtonSize}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVertical}" VerticalAlignment="Top" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVertical}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
				<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVertical}" />
				<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
				<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="true">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Slider}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
		<Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template" Value="{StaticResource SliderVertical}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Border CornerRadius="{Binding ElementName=PART_Border,Path=CornerRadius}" Background="{Binding ElementName=PART_Border,Path=Background}">
								<Border x:Name="PART_Border" Width="16" Height="16" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BaseSolidColorBrush}">
									<Border.Background>
										<SolidColorBrush Color="{DynamicResource WhiteColor}" />
									</Border.Background>
									<Grid>
										<Path x:Name="PART_CheckMark" SnapsToDevicePixels="False" VerticalAlignment="Center" HorizontalAlignment="Center" Data="{StaticResource PathCheckMark}" RenderTransformOrigin=".5,.5" Stretch="Fill">
											<Path.Fill>
												<SolidColorBrush Color="{DynamicResource WhiteColor}" />
											</Path.Fill>
											<Path.RenderTransform>
												<ScaleTransform ScaleX="0" ScaleY="0" />
											</Path.RenderTransform>
										</Path>
										<Rectangle Width="6" Height="2" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="PART_InderminateMark" RenderTransformOrigin=".5,.5">
											<Rectangle.Fill>
												<SolidColorBrush Color="{DynamicResource PrimaryPressedColor}" />
											</Rectangle.Fill>
											<Rectangle.RenderTransform>
												<ScaleTransform ScaleX="0" />
											</Rectangle.RenderTransform>
										</Rectangle>
									</Grid>
								</Border>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<TextElement.Foreground>
								<SolidColorBrush Color="{DynamicResource PrimaryTextColor}" />
							</TextElement.Foreground>
						</ContentPresenter>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimaryPressedColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{StaticResource PrimaryPressedColor}" Duration="00:00:.1" />
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimaryPressedColor}" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To=".7" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
										<DoubleAnimation Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)" To=".5" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboardIsCheckedNull">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_InderminateMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:.2" EasingFunction="{StaticResource ExponentialEaseOut}" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="PART_BeginStoryboardIsCheckedNull" />
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboard">
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource PrimaryPressedColor}" Duration="00:00:.1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="PART_BeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlBasicStyle}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="6,0" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="MinHeight" Value="40" />
		<Setter Property="MinWidth" Value="180" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border Name="PART_Border" CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource WhiteColor}" />
						</Border.Background>
						<Border.BorderBrush>
							<SolidColorBrush Color="{DynamicResource BaseColor}" />
						</Border.BorderBrush>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<!--<VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Duration="00:00:0.3"
                                                        Storyboard.TargetName="PART_Border"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource PrimaryPressedColor}"/>
                                    </Storyboard>
                                </VisualState>-->
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ColorAnimation Duration="00:00:0.3" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource BaseColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="ReadOnly" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="00:00:0.3" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource PrimaryPressedColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Margin="{TemplateBinding Padding}">
							<ScrollViewer x:Name="PART_ContentHost" />
							<TextBlock x:Name="PART_TextBlockWatermark" Text="{Binding Path=(wpfs:ElementHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource RegularTextSolidColorBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{StaticResource NormalFontSize}" Margin="7.5,0" Visibility="Collapsed" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="PART_BeginStoryboard">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="PART_Border"
                                                        To="{StaticResource SecondaryTextColor}" 
                                                        Duration="00:00:.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="PART_BeginStoryboard"></RemoveStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>-->
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="{StaticResource EnabledOpacity}" />
						</Trigger>
						<Trigger Property="Text" Value="">
							<Setter Property="Visibility" TargetName="PART_TextBlockWatermark" Value="Visible" />
						</Trigger>
						<!--<Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PrimaryPressedColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>